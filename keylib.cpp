#include "keylib.hpp"

Key::Key(const std::string& key_name, int real_x, int real_y, bool is_on_k70) :
    name(key_name), x(real_x), y(real_y), on_k70(is_on_k70)
{
}

Key NullKey("", -1, -1, false);

// Adopted from ccMSC
Key positions[] =
{
    {"mr", 38, 0, false}, {"m1", 50, 0, false}, {"m2", 62, 0, false}, {"m3", 74, 0, false}, {"light", 222, 0}, {"lock", 234, 0}, {"mute", 273, 0},
    {"g1", 0, 14, false}, {"g2", 11, 14, false}, {"g3", 22, 14, false}, {"esc", 38, 14}, {"f1", 58, 14}, {"f2", 70, 14}, {"f3", 82, 14}, {"f4", 94, 14}, {"f5", 114, 14}, {"f6", 126, 14}, {"f7", 138, 14}, {"f8", 150, 14}, {"f9", 170, 14}, {"f10", 182, 14}, {"f11", 194, 14}, {"f12", 206, 14}, {"prtscn", 222, 14}, {"scroll", 234, 14}, {"pause", 246, 14}, {"stop", 262, 14}, {"prev", 273, 14}, {"play", 285, 14}, {"next", 296, 14},
    {"g4", 0, 25, false}, {"g5", 11, 25, false}, {"g6", 22, 25, false}, {"grave", 38, 27}, {"1", 50, 27}, {"2", 62, 27}, {"3", 74, 27}, {"4", 86, 27}, {"5", 98, 27}, {"6", 110, 27}, {"7", 122, 27}, {"8", 134, 27}, {"9", 146, 27}, {"0", 158, 27}, {"minus", 170, 27}, {"equal", 182, 27}, {"bspace", 200, 27}, {"ins", 222, 27}, {"home", 234, 27}, {"pgup", 246, 27}, {"numlock", 261, 27}, {"numslash", 273, 27}, {"numstar", 285, 27}, {"numminus", 297, 27},
    {"g7", 0, 39, false}, {"g8", 11, 39, false}, {"g9", 22, 39, false}, {"tab", 42, 39}, {"q", 56, 39}, {"w", 68, 39}, {"e", 80, 39}, {"r", 92, 39}, {"t", 104, 39}, {"y", 116, 39}, {"u", 128, 39}, {"i", 140, 39}, {"o", 152, 39}, {"p", 164, 39}, {"lbrace", 178, 39}, {"rbrace", 190, 39}, {"bslash", 202, 39}, {"del", 222, 39}, {"end", 234, 39}, {"pgdn", 246, 39}, {"num7", 261, 39}, {"num8", 273, 39}, {"num9", 285, 39}, {"numplus", 297, 33},
    {"g10", 0, 50, false}, {"g11", 11, 50, false}, {"g12", 22, 50, false}, {"caps", 44, 51}, {"a", 59, 51}, {"s", 71, 51}, {"d", 83, 51}, {"f", 95, 51}, {"g", 107, 51}, {"h", 119, 51}, {"j", 131, 51}, {"k", 143, 51}, {"l", 155, 51}, {"colon", 167, 51}, {"quote", 179, 51}, {"enter", 198, 51}, {"num4", 273, 51}, {"num5", 273, 51}, {"num6", 285, 51},
    {"g13", 0, 64, false}, {"g14", 11, 64, false}, {"g15", 22, 64, false}, {"lshift", 46, 63}, {"z", 65, 63}, {"x", 77, 63}, {"c", 89, 63}, {"v", 101, 63}, {"b", 113, 63}, {"n", 125, 63}, {"m", 137, 63}, {"comma", 149, 63}, {"dot", 161, 63}, {"slash", 173, 63}, {"rshift", 195, 63}, {"up", 234, 63}, {"num1", 261, 63}, {"num2", 273, 63}, {"num3", 285, 63}, {"numenter", 297, 69},
    {"g16", 0, 75, false}, {"g17", 11, 75, false}, {"g18", 22, 75, false}, {"lctrl", 42, 75}, {"lwin", 56, 75}, {"lalt", 70, 75}, {"space", 122, 75}, {"ralt", 164, 75}, {"rwin", 178, 75}, {"rmenu", 190, 75}, {"rctrl", 202, 75}, {"left", 222, 75}, {"down", 234, 75}, {"right", 246, 75}, {"num0", 267, 75}, {"numdot", 285, 75},
};

unsigned char key_table_k70[7][92] =
{
{255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,   4,   4,   4,   4,   5,   5,   5,   5, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,   6,   6,   6,   6, 255, 255, 255, 255, 255, 255, 255, 255},
{10,  10,  10,  10, 255, 255,  11,  11,  11,  11,  12,  12,  12,  12,  13,  13,  13,  13,  14,  14,  14,  14, 255, 255, 255,  15,  15,  15,  15,  16,  16,  16,  16,  17,  17,  17,  17,  18,  18,  18,  18, 255, 255, 255,  19,  19,  19,  19,  20,  20,  20,  20,  21,  21,  21,  21,  22,  22,  22,  22, 255, 255,  23,  23,  23,  23,  24,  24,  24,  24,  25,  25,  25,  25, 255, 255,  26,  26,  26,  26,  27,  27,  27,  27,  28,  28,  28,  28,  29,  29,  29,  29},
{33,  33,  33,  33,  34,  34,  34,  34,  35,  35,  35,  35,  36,  36,  36,  36,  37,  37,  37,  37,  38,  38,  38,  38,  39,  39,  39,  39,  40,  40,  40,  40,  41,  41,  41,  41,  42,  42,  42,  42,  43,  43,  43,  43,  44,  44,  44,  44,  45,  45,  45,  45,  46,  46,  46,  46,  46,  46,  46,  46, 255, 255,  47,  47,  47,  47,  48,  48,  48,  48,  49,  49,  49,  49, 255, 255,  50,  50,  50,  50,  51,  51,  51,  51,  52,  52,  52,  52,  53,  53,  53,  53},
{57,  57,  57,  57,  57,  57,  58,  58,  58,  58,  59,  59,  59,  59,  60,  60,  60,  60,  61,  61,  61,  61,  62,  62,  62,  62,  63,  63,  63,  63,  64,  64,  64,  64,  65,  65,  65,  65,  66,  66,  66,  66,  67,  67,  67,  67,  68,  68,  68,  68,  69,  69,  69,  69,  70,  70,  70,  70,  70,  70, 255, 255,  71,  71,  71,  71,  72,  72,  72,  72,  73,  73,  73,  73, 255, 255,  74,  74,  74,  74,  75,  75,  75,  75,  76,  76,  76,  76,  77,  77,  77,  77},
{81,  81,  81,  81,  81,  81,  81,  82,  82,  82,  82,  83,  83,  83,  83,  84,  84,  84,  84,  85,  85,  85,  85,  86,  86,  86,  86,  87,  87,  87,  87,  88,  88,  88,  88,  89,  89,  89,  89,  90,  90,  90,  90,  91,  91,  91,  91,  92,  92,  92,  92,  93,  93,  93,  93,  93,  93,  93,  93,  93, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,  94,  94,  94,  94,  95,  95,  95,  95,  96,  96,  96,  96,  77,  77,  77,  77},
{100, 100, 100, 100, 100, 100, 100, 100, 100, 101, 101, 101, 101, 102, 102, 102, 102, 103, 103, 103, 103, 104, 104, 104, 104, 105, 105, 105, 105, 106, 106, 106, 106, 107, 107, 107, 107, 108, 108, 108, 108, 109, 109, 109, 109, 110, 110, 110, 110, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 255, 255, 255, 255, 255, 255, 112, 112, 112, 112, 255, 255, 255, 255, 255, 255, 113, 113, 113, 113, 114, 114, 114, 114, 115, 115, 115, 115, 116, 116, 116, 116},
{120, 120, 120, 120, 120, 120, 121, 121, 121, 121, 122, 122, 122, 122, 122, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 124, 124, 124, 124, 124, 125, 125, 125, 125, 126, 126, 126, 126, 127, 127, 127, 127, 127, 127, 255, 255, 128, 128, 128, 128, 129, 129, 129, 129, 130, 130, 130, 130, 255, 255, 131, 131, 131, 131, 131, 131, 131, 131, 132, 132, 132, 132, 116, 116, 116, 116},
};

const Key& get_key(int x, int y, int keyboard)
{
    int pos = key_table_k70[y][x];
    if (pos == 255)
        return NullKey;
    else return positions[pos];
}
